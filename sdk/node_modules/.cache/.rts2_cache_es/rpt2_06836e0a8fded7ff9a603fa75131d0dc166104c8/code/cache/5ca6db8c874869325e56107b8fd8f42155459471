{"code":"import { Base } from \"../base\";\r\nexport class CompanyData extends Base {\r\n    async createCompanyData(companyData) {\r\n        return await this.invoke(`company-data`, {\r\n            method: \"POST\",\r\n            data: companyData\r\n        });\r\n    }\r\n    async getCompanyDataById(companyDataId) {\r\n        return await this.invoke(`company-data/${companyDataId}`);\r\n    }\r\n    async getCompanyData({ search, parentId }) {\r\n        return await this.invoke(`company-data`, {\r\n            params: { search, parentId },\r\n        });\r\n    }\r\n    async updateCompanyData(companyDataId, companyDataData) {\r\n        return await this.invoke(`company-data/${companyDataId}`, {\r\n            method: \"PATCH\",\r\n            data: companyDataData\r\n        });\r\n    }\r\n    async deleteCompanyData(companyDataId) {\r\n        return await this.invoke(`company-data/${companyDataId}`, {\r\n            method: \"DELETE\"\r\n        });\r\n    }\r\n}\r\n","references":["/Users/williamamouh/Documents/Projects/_cocrafter/sdk/src/base.ts","/Users/williamamouh/Documents/Projects/_cocrafter/sdk/src/companyData/types.ts"],"dts":{"name":"/Users/williamamouh/Documents/Projects/_cocrafter/sdk/dist/companyData/index.d.ts","writeByteOrderMark":false,"text":"import { Base, ResponseTypeDto } from \"../base\";\r\nimport { CompanyDataInterface, UpsertCompanyDataInterface } from \"./types\";\r\nexport declare class CompanyData extends Base {\r\n    createCompanyData(companyData: UpsertCompanyDataInterface): Promise<ResponseTypeDto<CompanyDataInterface>>;\r\n    getCompanyDataById(companyDataId: number): Promise<ResponseTypeDto<CompanyDataInterface>>;\r\n    getCompanyData({ search, parentId }: {\r\n        search: string;\r\n        parentId?: number;\r\n    }): Promise<ResponseTypeDto<CompanyDataInterface[]>>;\r\n    updateCompanyData(companyDataId: number, companyDataData: Partial<UpsertCompanyDataInterface>): Promise<ResponseTypeDto<CompanyDataInterface>>;\r\n    deleteCompanyData(companyDataId: number): Promise<ResponseTypeDto<CompanyDataInterface>>;\r\n}\r\n"}}
