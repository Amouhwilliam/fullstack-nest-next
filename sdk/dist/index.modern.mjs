import t from"axios";function a(){return a=Object.assign?Object.assign.bind():function(t){for(var a=1;a<arguments.length;a++){var e=arguments[a];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])}return t},a.apply(this,arguments)}var e,n,r;!function(t){t.JSON="application/json",t.FORM="application/x-www-form-urlencoded",t.MULTIPART_FORM_DATA="multipart/form-data",t.XML="application/xml",t.TEXT="text/plain",t.HTML="text/html"}(e||(e={}));class o{constructor(t){this.baseUrl=void 0,this.accessToken=void 0,this.baseUrl=t.baseUrl}async invoke(n,r,o){const s=a({url:`${this.baseUrl}/${n}`,headers:{Accept:e.JSON,"Content-Type":o||e.JSON}},r);return t(s).then(t=>t.data)}}!function(t){t.FILE="FILE",t.FOLDER="FOLDER"}(n||(n={})),function(t){t[t.OK=200]="OK"}(r||(r={}));var s,c={__proto__:null,get Type_Enum(){return n},get HTTP_RESPONSE_STATUS(){return r}};class i extends o{}s=i,[class extends o{async createCompanyData(t){return await this.invoke("company-data",{method:"POST",data:t})}async getCompanyDataById(t){return await this.invoke(`company-data/${t}`)}async getCompanyData({search:t,parentId:a}){return await this.invoke("company-data",{params:{search:t,parentId:a}})}async updateCompanyData(t,a){return await this.invoke(`company-data/${t}`,{method:"PATCH",data:a})}async deleteCompanyData(t){return await this.invoke(`company-data/${t}`,{method:"DELETE"})}}].forEach(t=>{Object.getOwnPropertyNames(t.prototype).forEach(a=>{Object.defineProperty(s.prototype,a,Object.getOwnPropertyDescriptor(t.prototype,a)||Object.create(null))})});export{i as default,c as types};
